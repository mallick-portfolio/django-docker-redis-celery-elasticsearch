services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app # Mounts the frontend code to the container
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    depends_on:
      - database
      - redis
      - elasticsearch
    build:
      context: ./chatpa-backend
      dockerfile: Dockerfile
    env_file:
      - ./chatpa-backend/env/backend.env
    ports:
      - "8000:8000"
    volumes:
      - ./chatpa-backend:/app
      - ./chatpa-backend/logs:/logs

  database:
    image: postgres:14
    env_file:
      - ./chatpa-backend/env/db.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_DPRES3:/var/lib/postgresql/data

  redis:
    image: redis/redis-stack:7.2.0-v10
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data

volumes:
  postgres_data_DPRES3:
  redis_data:
  esdata:
